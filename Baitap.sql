-- CREATE TABLES
CREATE TABLE DEAN
(
	TENDA NVARCHAR2(15),
	MADA INT NOT NULL,
	DDIEM_DA NVARCHAR2(15) NOT NULL,
	PHONG INT NOT NULL
);

CREATE TABLE PHONGBAN
(
	TENPHG NVARCHAR2(15),
	MAPHG INT NOT NULL,
	TRPHG NVARCHAR2(9),
	NG_NHANCHUC DATE
);

CREATE TABLE DIADIEM_PHG
(
	MAPHG INT NOT NULL,
	DIADIEM NVARCHAR2(15)
);

CREATE TABLE NHANVIEN
(
	HONV NVARCHAR2(15),
	TENLOT NVARCHAR2(15),
	TENNV NVARCHAR2(15),
	MANV NVARCHAR2(9) NOT NULL,
	NGSINH DATE,
	DCHI NVARCHAR2(30),
	PHAI NVARCHAR2(3),
	LUONG FLOAT,
	MA_NQL NVARCHAR2(9),
	PHG INT NOT NULL
);

CREATE TABLE THANNHAN
(
	MA_NVIEN NVARCHAR2(9) NOT NULL,
	TENTN NVARCHAR2(15),
	PHAI NVARCHAR2(3),
	NGSINH DATE,
	QUANHE NVARCHAR2(15)
);

CREATE TABLE CONGVIEC
(
	MADA INT NOT NULL,
	STT INT NOT NULL,
	TEN_CONG_VIEC NVARCHAR2(50)
);

CREATE TABLE PHANCONG
(
	MA_NVIEN NVARCHAR2(9) NOT NULL,
	MADA INT NOT NULL,
	STT INT NOT NULL,
	THOIGIAN FLOAT
);
--23. Với mỗi đề án, liệt kê tên đề án và tổng số giờ làm việc [một tuần] của tất cả các nhân viên tham dự đề án đó.
SELECT DEAN.TENDA, SUM(PHANCONG.THOIGIAN) FROM PHANCONG
LEFT JOIN DEAN
ON PHANCONG.MADA = DEAN.MADA
GROUP BY (DEAN.TENDA)

--24. Với mỗi đề án, cho biết có bao nhiêu nhân viên tham gia đề án đó.
SELECT DEAN.TENDA, DEAN.MADA, COUNT(DISTINCT PHANCONG.MA_NVIEN) AS SOLUONGNV FROM PHANCONG
LEFT JOIN DEAN
ON PHANCONG.MADA = DEAN.MADA
GROUP BY (DEAN.TENDA, DEAN.MADA)

--25. Với mỗi nhân viên, cho biết họ và tên nhân viên và số lượng thân nhân của nhân viên đó.
SELECT NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV, NHANVIEN.MANV, COUNT(TENTN)
FROM NHANVIEN
LEFT JOIN THANNHAN
ON NHANVIEN.MANV = THANNHAN.MA_NVIEN
GROUP BY (NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV, NHANVIEN.MANV)

--26. Với mỗi nhân viên, cho biết họ tên của nhân viên và số lượng đề án mà nhân viên đó đã tham gia.
SELECT NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV, NHANVIEN.MANV, COUNT(PHANCONG.MADA) AS SOLUONGDA
	FROM NHANVIEN
LEFT JOIN PHANCONG
ON NHANVIEN.MANV = PHANCONG.MA_NVIEN
GROUP BY (NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV, NHANVIEN.MANV)

--27. Với mỗi nhân viên, cho biết số lượng nhân viên mà nhân viên đó quản lý trực tiếp.
WITH QUANLY AS
(
SELECT * FROM NHANVIEN
WHERE MANV IN (SELECT MA_NQL FROM NHANVIEN)
)
SELECT QUANLY.HONV||' '||QUANLY.TENLOT||' '||QUANLY.TENNV AS HOTEN_QL, COUNT(NHANVIEN.MANV)
FROM QUANLY
LEFT JOIN NHANVIEN
ON NHANVIEN.MA_NQL = QUANLY.MANV
GROUP BY (QUANLY.HONV||' '||QUANLY.TENLOT||' '||QUANLY.TENNV)

--28. Với mỗi phòng ban, liệt kê tên phòng ban và lương trung bình của những nhân viên làm việc cho phòng ban đó.
SELECT PHONGBAN.TENPHG, PHONGBAN.MAPHG, AVG(NHANVIEN.LUONG)
FROM PHONGBAN
LEFT JOIN NHANVIEN
ON PHONGBAN.MAPHG = NHANVIEN.PHG
GROUP BY (PHONGBAN.TENPHG, PHONGBAN.MAPHG)

--29. Với các phòng ban có mức lương trung bình trên 30,000, liệt kê tên phòng ban và số lượng nhân viên của phòng ban đó.
SELECT PHONGBAN.TENPHG, PHONGBAN.MAPHG, COUNT(DISTINCT NHANVIEN.MANV) AS SOLUONGNV
FROM PHONGBAN
LEFT JOIN NHANVIEN
ON PHONGBAN.MAPHG = NHANVIEN.PHG
GROUP BY (PHONGBAN.TENPHG, PHONGBAN.MAPHG)
HAVING AVG(NHANVIEN.LUONG) > 30000

--30. Với mỗi phòng ban, cho biết tên phòng ban và số lượng đề án mà phòng ban đó chủ trì.
SELECT PHONGBAN.TENPHG, PHONGBAN.MAPHG, COUNT(DEAN.MADA)
FROM PHONGBAN
LEFT JOIN DEAN
ON PHONGBAN.MAPHG = DEAN.PHONG
GROUP BY (PHONGBAN.TENPHG, PHONGBAN.MAPHG)

--31. Với mỗi phòng ban, cho biết tên phòng ban, họ tên người trưởng phòng và số lượng đề án mà phòng ban đó chủ trì.
SELECT PHONGBAN.TENPHG, NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_TP, COUNT(DEAN.MADA)
FROM PHONGBAN
LEFT JOIN DEAN
ON PHONGBAN.MAPHG = DEAN.PHONG
LEFT JOIN NHANVIEN
ON PHONGBAN.TRPHG = NHANVIEN.MANV
GROUP BY (PHONGBAN.TENPHG, NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV)

--32. Với mỗi phòng ban có mức lương trung bình lớn hơn 40,000, cho biết tên phòng ban và số lượng đề án mà phòng ban đó chủ trì.
SELECT PHONGBAN.TENPHG, PHONGBAN.MAPHG,AVG(NHANVIEN.LUONG) , COUNT(DISTINCT DEAN.MADA)
FROM PHONGBAN
LEFT JOIN DEAN
ON PHONGBAN.MAPHG = DEAN.PHONG
LEFT JOIN NHANVIEN
ON PHONGBAN.MAPHG = NHANVIEN.PHG
GROUP BY (PHONGBAN.TENPHG, PHONGBAN.MAPHG)
HAVING AVG(NHANVIEN.LUONG) > 40000

--33. Cho biết số đề án diễn ra tại từng địa điểm.
SELECT DDIEM_DA, COUNT(TENDA)
FROM DEAN
GROUP BY (DDIEM_DA)

--34. Với mỗi đề án, cho biết tên đề án và số lượng công việc của đề án này.
SELECT DEAN.TENDA, DEAN.MADA, CONGVIEC.TEN_CONG_VIEC
FROM DEAN
LEFT JOIN CONGVIEC
ON DEAN.MADA = CONGVIEC.MADA

--35. Với mỗi công việc trong đề án có mã đề án là 30, cho biết số lượng nhân viên được phân công.
SELECT DEAN.TENDA, DEAN.MADA, CONGVIEC.TEN_CONG_VIEC, COUNT(DISTINCT PHANCONG.MA_NVIEN) AS SOLUONGNV
FROM CONGVIEC
LEFT JOIN DEAN
ON CONGVIEC.MADA = DEAN.MADA 
LEFT JOIN PHANCONG
ON CONGVIEC.STT = PHANCONG.STT AND CONGVIEC.MADA = PHANCONG.MADA
WHERE CONGVIEC.MADA = 30
GROUP BY DEAN.TENDA, DEAN.MADA, CONGVIEC.TEN_CONG_VIEC

--36. Với mỗi công việc trong đề án có mã đề án là 'Đào Tạo', cho biết số lượng nhân viên được phân công.
--37. Cho biết danh sách các đề  án (MADA) có: nhân công với họ  (HONV) là 'Đinh'  hoặc  có  người  trưởng  phòng  chủ  trì  đề  án  với  họ  (HONV)  là 'Đinh'.
WITH TRUONGPHONG AS 
(SELECT * FROM NHANVIEN
WHERE MANV IN (SELECT TRPHG FROM PHONGBAN))
SELECT PHANCONG.MADA, NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV, TRUONGPHONG.HONV||' '||TRUONGPHONG.TENLOT||' '||TRUONGPHONG.TENNV AS HOTEN_TP
FROM PHANCONG
LEFT JOIN NHANVIEN 
ON PHANCONG.MA_NVIEN = NHANVIEN.MANV
LEFT JOIN TRUONGPHONG
ON PHANCONG.MA_NVIEN = TRUONGPHONG.MANV
WHERE NHANVIEN.HONV = 'Đinh' OR TRUONGPHONG.HONV = 'Đinh'

--38. Danh  sách  những  nhân  viên  (HONV,  TENLOT,  TENNV)  có  trên  2  thân nhân.
SELECT NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV, COUNT(THANNHAN.TENTN) AS SOLUONGTN FROM NHANVIEN
LEFT JOIN THANNHAN
ON NHANVIEN.MANV = THANNHAN.MA_NVIEN
GROUP BY (NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV)
HAVING COUNT(THANNHAN.TENTN) > 2

--39.  Danh  sách  những  nhân  viên  (HONV,  TENLOT,  TENNV)  không  có  thân nhân nào.
SELECT NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV, COUNT(1) AS SOLUONGTN FROM NHANVIEN
LEFT JOIN THANNHAN
ON NHANVIEN.MANV = THANNHAN.MA_NVIEN
GROUP BY (NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV)
HAVING COUNT(THANNHAN.TENTN) = 0

SELECT NHANVIEN.HONV||' '||NHANVIEN.TENLOT||' '||NHANVIEN.TENNV AS HOTEN_NV FROM NHANVIEN
LEFT JOIN THANNHAN
ON NHANVIEN.MANV = THANNHAN.MA_NVIEN
WHERE  THANNHAN.MA_NVIEN IS NULL

SELECT * FROM NHANVIEN
    WHERE MANV NOT IN (SELECT MA_NVIEN FROM THANNHAN)

--40. Danh  sách  những  trưởng  phòng  (HONV,  TENLOT,  TENNV)  có  tối  thiểu một thân nhân.
SELECT * FROM NHANVIEN 
    WHERE MANV IN (SELECT TRPHG FROM PHONGBAN) AND MANV IN (SELECT MA_NVIEN FROM THANNHAN)

--41. Tìm họ (HONV) của những trưởng phòng chưa có gia đình.
SELECT * FROM NHANVIEN
WHERE MANV IN (SELECT TRPHG FROM PHONGBAN) AND MANV IN (SELECT MA_NVIEN FROM THANNHAN WHERE QUANHE != 'Vợ chồng')


--42. Cho biết họ tên nhân viên (HONV, TENLOT, TENNV) có mức lương trên mức lương trung bình của phòng "Nghiên cứu".
WITH LUONGTB_PNC AS
(
SELECT AVG(NHANVIEN.LUONG) AS TB_LUONG
    FROM NHANVIEN
LEFT JOIN PHONGBAN
ON NHANVIEN.PHG = PHONGBAN.MAPHG
WHERE PHONGBAN.TENPHG = 'Nghiên cứu'
    )
SELECT * FROM NHANVIEN
WHERE LUONG > (SELECT TB_LUONG FROM LUONGTB_PNC) 

--43. Cho biết tên phòng ban và họ tên trưởng phòng của phòn ban có đông nhân viên nhất.
WITH PHONG5 AS
(   
    SELECT PHG, COUNT(MANV) AS SOLUONGNV
    FROM NHANVIEN
	GROUP BY PHG
)
SELECT * FROM NHANVIEN
LEFT JOIN PHONG5
ON NHANVIEN.PHG = PHONG5.PHG

CREATE TABLE TMP_KIET as
WITH SOLUONGNV AS (
SELECT * FROM (
SELECT PHG, COUNT(DISTINCT MANV) AS SOLUONGNV FROM NHANVIEN
GROUP BY PHG
ORDER BY COUNT(DISTINCT MANV) DESC
)
WHERE ROWNUM = 1
)
SELECT PHONGBAN.TENPHG, NHANVIEN.* FROM NHANVIEN
LEFT JOIN PHONGBAN
ON NHANVIEN.PHG = PHONGBAN.MAPHG
WHERE MANV IN (SELECT PHG FROM SOLUONGNV) 

insert into TMP_KIET(MANV,TENPHG,PHG)
select PHG,TENPHG,MANV from TMP_KIET


WITH A AS(
Select t.*,
    'PHONG'||PHG AS TENPHONG, LUONG
    from NHANVIEN t)
SELECT A.TENPHONG, COUNT(1) SOLUONG FROM A
GROUP BY A.TENPHONG

--1. Tạo 1 bảng mới chứa thông tin trưởng phòng / quản lý dựa theo bảng nhân viên
CREATE TABLE QUANLY AS
SELECT * FROM NHANVIEN
WHERE MANV IN (SELECT MA_NQL FROM NHANVIEN) OR MANV IN (SELECT TRPHG FROM PHONGBAN)

SELECT * FROM QUANLY



--2. Tìm và xóa dữ liệu của trưởng phòng/quản lý trong bảng dữ liệu nhân viên
DELETE FROM NHANVIEN
WHERE MANV IN (SELECT MA_NQL FROM NHANVIEN) OR MANV IN (SELECT TRPHG FROM PHONGBAN)

COMMIT;

SELECT * FROM NHANVIEN
--3. Thêm cột dữ liệu mới vào bảng nhân viên và đặt tên cho cột mới là "NgayHetHanHD"
ALTER TABLE NHANVIEN ADD NGAYHETHANHD DATE
SELECT * FROM NHANVIEN

--4. Cập nhật ngày "NgayHetHanHD" cho các nhóm nhân viên như sau:
        --Nhóm nhân viên phòng 5: 18/12/2022
        --Nhóm nhân viên phòng 6: 08/11/2022
        --Nhóm nhân viên phòng khác: sau 4 tháng kể từ ngày hiện tại

UPDATE NHANVIEN
SET NGAYHETHANHD = '18-DEC-2022'
WHERE PHG = 5

UPDATE NHANVIEN
SET NGAYHETHANHD = TO_DATE('08/11/2022','DD/MM/YYYY')
WHERE PHG = 6

UPDATE NHANVIEN
SET NGAYHETHANHD = ADD_MONTHS(CURRENT_DATE,4)
WHERE PHG NOT IN (5,6)

--5. Cho biết số lượng nhân viên có mức lương trên 20000, 30000, 40000 và 50000 (yêu cầu thể hiện thông tin trên 1 bảng kết quả)
SELECT CHECK_LUONG, COUNT(DISTINCT MANV) FROM (
    SELECT MANV,LUONG, CASE
WHEN LUONG > 50000 THEN 'NHAN VIEN CO LUONG >50000'
WHEN LUONG > 40000 THEN 'NHAN VIEN CO LUONG >40000'
WHEN LUONG > 30000 THEN 'NHAN VIEN CO LUONG >30000'
WHEN LUONG > 20000 THEN 'NHAN VIEN CO LUONG >20000'
ELSE 'NHAN VIEN CO LUONG <= 20000' END AS CHECK_LUONG
FROM NHANVIEN )
GROUP BY CHECK_LUONG
 
--6. Cho biết danh sách nhân viên đã hết hạn hợp đồng trong vòng 6 tháng gần nhất.
SELECT * FROM NHANVIEN
WHERE (NGAYHETHANHD BETWEEN ADD_MONTHS(CURRENT_DATE,-6) AND CURRENT_DATE)
--7. Cho biết công ty có 1 công việc mới "Đánh giá kết quả kinh doanh" và cần phân công cho các nhân Viên Nam tại phòng nghiên cứu thực hiện, yêu cầu gom nhóm các nhân viên được phân công và không được phân công.
SELECT PHANCONGVIEC, COUNT(DISTINCT MANV) FROM
(
    SELECT MANV, PHAI, CASE
    WHEN PHAI = 'Nam' AND TENPHG = 'Nghiên cứu' THEN 'Được phân công'
    ELSE 'Không được phân công' END AS PHANCONGVIEC
    FROM
        (SELECT NHANVIEN.*, PHONGBAN.TENPHG FROM NHANVIEN
        LEFT JOIN PHONGBAN
        ON NHANVIEN.PHG = PHONGBAN.MAPHG)
)
GROUP BY PHANCONGVIEC


SELECT PHANCONGVIEC, COUNT(DISTINCT MANV) FROM
(
    SELECT NHANVIEN.*, PHONGBAN.TENPHG,CASE
    					WHEN NHANVIEN.PHAI = 'Nam' AND PHONGBAN.TENPHG = 'Nghiên cứu' THEN 'Được phân công'
    					ELSE 'Không được phân công' 
						END AS PHANCONGVIEC FROM NHANVIEN
        LEFT JOIN PHONGBAN
        ON NHANVIEN.PHG = PHONGBAN.MAPHG
)
GROUP BY PHANCONGVIEC
